// Generated by view binder compiler. Do not edit!
package com.newsapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.newsapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pl.droidsonroids.gif.GifImageView;

public final class ActivityDashboardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView img;

  @NonNull
  public final TextView location;

  @NonNull
  public final RecyclerView newsRecycle;

  @NonNull
  public final TextView next;

  @NonNull
  public final LinearLayout notfound;

  @NonNull
  public final TextView pageno;

  @NonNull
  public final TextView previous;

  @NonNull
  public final EditText searchText;

  @NonNull
  public final ShimmerFrameLayout shimmerLayout;

  @NonNull
  public final LinearLayout weatherDetails;

  @NonNull
  public final GifImageView weatherGif;

  @NonNull
  public final TextView weatherType;

  private ActivityDashboardBinding(@NonNull RelativeLayout rootView, @NonNull ImageView img,
      @NonNull TextView location, @NonNull RecyclerView newsRecycle, @NonNull TextView next,
      @NonNull LinearLayout notfound, @NonNull TextView pageno, @NonNull TextView previous,
      @NonNull EditText searchText, @NonNull ShimmerFrameLayout shimmerLayout,
      @NonNull LinearLayout weatherDetails, @NonNull GifImageView weatherGif,
      @NonNull TextView weatherType) {
    this.rootView = rootView;
    this.img = img;
    this.location = location;
    this.newsRecycle = newsRecycle;
    this.next = next;
    this.notfound = notfound;
    this.pageno = pageno;
    this.previous = previous;
    this.searchText = searchText;
    this.shimmerLayout = shimmerLayout;
    this.weatherDetails = weatherDetails;
    this.weatherGif = weatherGif;
    this.weatherType = weatherType;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img;
      ImageView img = ViewBindings.findChildViewById(rootView, id);
      if (img == null) {
        break missingId;
      }

      id = R.id.location;
      TextView location = ViewBindings.findChildViewById(rootView, id);
      if (location == null) {
        break missingId;
      }

      id = R.id.news_recycle;
      RecyclerView newsRecycle = ViewBindings.findChildViewById(rootView, id);
      if (newsRecycle == null) {
        break missingId;
      }

      id = R.id.next;
      TextView next = ViewBindings.findChildViewById(rootView, id);
      if (next == null) {
        break missingId;
      }

      id = R.id.notfound;
      LinearLayout notfound = ViewBindings.findChildViewById(rootView, id);
      if (notfound == null) {
        break missingId;
      }

      id = R.id.pageno;
      TextView pageno = ViewBindings.findChildViewById(rootView, id);
      if (pageno == null) {
        break missingId;
      }

      id = R.id.previous;
      TextView previous = ViewBindings.findChildViewById(rootView, id);
      if (previous == null) {
        break missingId;
      }

      id = R.id.search_text;
      EditText searchText = ViewBindings.findChildViewById(rootView, id);
      if (searchText == null) {
        break missingId;
      }

      id = R.id.shimmerLayout;
      ShimmerFrameLayout shimmerLayout = ViewBindings.findChildViewById(rootView, id);
      if (shimmerLayout == null) {
        break missingId;
      }

      id = R.id.weather_details;
      LinearLayout weatherDetails = ViewBindings.findChildViewById(rootView, id);
      if (weatherDetails == null) {
        break missingId;
      }

      id = R.id.weather_gif;
      GifImageView weatherGif = ViewBindings.findChildViewById(rootView, id);
      if (weatherGif == null) {
        break missingId;
      }

      id = R.id.weather_type;
      TextView weatherType = ViewBindings.findChildViewById(rootView, id);
      if (weatherType == null) {
        break missingId;
      }

      return new ActivityDashboardBinding((RelativeLayout) rootView, img, location, newsRecycle,
          next, notfound, pageno, previous, searchText, shimmerLayout, weatherDetails, weatherGif,
          weatherType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
